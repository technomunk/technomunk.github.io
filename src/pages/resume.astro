---
import { getCollection } from 'astro:content';

import MainLayout from '@layouts/MainLayout.astro';

import type { Assignment } from '@scripts/types/assignment';
import type { Project } from '@scripts/types/project';

import { dateCompare } from '@lib/dateutil';
import Table from '@components/Table.astro';

interface Skill {
    display: string;
    hint: string;
    type: string;
}

const assignments = await getCollection('assignments');
assignments.sort((a, b) => dateCompare(b.data.startDate, a.data.startDate));

const projects = await getCollection('projects');
projects.sort((a, b) => dateCompare(b.data.lastActivity, a.data.lastActivity));

const skills = new Map<string, Skill>();
for (const skill of await getCollection('skills')) {
    skills.set(skill.id, skill.data);
}

const findOrDefaultSkill = (skill: string): Skill => {
    const d = skills.get(skill.toLowerCase());
    if (d === undefined) {
        console.warn(`${skill} skill not found`);
        return {
            display: skill,
            hint: skill,
            type: 'unknown',
        };
    }
    return d;
};
---

<MainLayout title="Technomunk's Resume" description="Overview of Technomunk's work">
    <header class="strong text-center">
        <!-- TODO: add an actual image of me face -->
        <!-- <Avatar src={avatarImg} /> -->
        <caption translate="no">Grigory <mark>Technomunk</mark> Glukhov</caption>
    </header>
    <main>
        <p class="text-center">
            Welcome to the overview of my development work assignments and projects.
        </p>
        <Table>
            <caption>Assignments</caption>
            <thead>
                <tr>
                    <th scope="col">Assignment</th>
                    <th scope="col">Work</th>
                    <th scope="col">Technologies</th>
                    <th scope="col">Date</th>
                </tr>
            </thead>
            <tbody>
                {
                    assignments.map((a) => (
                        <tr>
                            <th scope="row">
                                {a.data.title} @ {a.data.employer}
                            </th>
                            <td>{a.data.description}</td>
                            <td>
                                {a.data.skills
                                    .sort()
                                    .map(findOrDefaultSkill)
                                    .map((t) => (
                                        <div title={t.hint} class={t.type + ' tag'}>
                                            {t.display}
                                        </div>
                                    ))}
                            </td>
                            <td>
                                {a.data.startDate} to {a.data.endDate}
                            </td>
                        </tr>
                    ))
                }
            </tbody>
        </Table>
        <Table>
            <caption>Projects</caption>
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Idea</th>
                    <th scope="col">Aspiration</th>
                    <th scope="col">Technology</th>
                    <th scope="col">Status</th>
                </tr>
            </thead>
            <tbody>
                {
                    projects.map((p) => (
                        <tr>
                            <th scope="row">{p.data.title}</th>
                            <td>{p.data.description}</td>
                            <td>{p.data.aspiration}</td>
                            <td>
                                {p.data.skills
                                    .sort()
                                    .map(findOrDefaultSkill)
                                    .map((t) => (
                                        <div title={t.hint} class={t.type + ' tag'}>
                                            {t.display}
                                        </div>
                                    ))}
                            </td>
                            <td>{p.data.status}</td>
                        </tr>
                    ))
                }
            </tbody>
        </Table>
    </main>
</MainLayout>

<style lang="scss">
    mark {
        font-style: italic;
        background-color: transparent;
    }

    table {
        min-width: 100%;
    }

    .tag {
        display: inline-block;
        border-radius: 20px;
        padding: 2px 5px;
        margin: 2px;
        text-align: center;

        &.software {
            background: #ecff8e;
        }
        &.language {
            background: #70faff;
        }
        &.methodology {
            background: #ffaad2;
        }
        &.standard {
            background: #95ff9e;
        }
        &.skill {
            background: #e3d3ff;
        }
        &.platform {
            background: #e0e0e0;
        }
    }
</style>
